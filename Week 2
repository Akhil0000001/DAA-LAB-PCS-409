#include<iostream>

#include<fstream>

using namespace std;



int binarySearch(int arr[],int s,int e,int key,bool first){

    //first if true find first occurance else last occurance

    int pos=-1;

    while(s<=e){

        int mid=s+(e-s)/2;

        if(arr[mid]<key){

            s=mid+1;

        }

        else if(arr[mid]>key){

            e=mid-1;

        }else{

            pos=mid;

            if(first){

                e=mid-1;

            }else{

                s=mid+1;

            }

        }

    }

    return pos;

}

void search(int arr[],int n,int key){

    ofstream out("output.txt",ios::app);

    int first=binarySearch(arr,0,n-1,key,true);

    if(first == -1){

        out<<"Key not Present"<<endl;

        return;

    }

    int last=binarySearch(arr,0,n-1,key,false);

    int occ=last-first+1;

    out<<key<<" - "<<occ<<endl;

    out.close();

}



int main(){

    ifstream inp("input.txt");

    int n,T;// T== number of testcases

    inp>>T;

    while(T--){

        inp>>n;

        int key,arr[n];

        for(int i=0;i<n;i++){

            inp>>arr[i];

        }

        inp>>key;

        search(arr,n,key);

    }

    inp.close();

}









#include<bits/stdc++.h>

#include<fstream>

using namespace std;



void searchSquence(int arr[],int n){

    ofstream out("output.txt",ios::app);

    unordered_map<int,int> mpp;

    for(int i=2;i<n;i++){

        mpp[arr[i]]=i;

    }

    for(int i=0;i<n-2;i++){

        for(int j=i+1;j<n-1;j++){

            if(mpp.count(arr[i]+arr[j])){

                out<<i<<" , "<<j<<" , "<<mpp[arr[i]+arr[j]]<<endl;

                return;

            }

        }

    }

    out<<"No Sequence found"<<endl;

    out.close();

}



int main(){

    ifstream inp("input.txt");

    int n,T;// T== number of testcases

    inp>>T;

    while(T--){

        inp>>n;

        int arr[n];

        for(int i=0;i<n;i++){

            inp>>arr[i];

        }

        searchSquence(arr,n);

    }

    inp.close();

}


#include<iostream>

#include<fstream>

using namespace std;



void countPair(int arr[],int n,int key){

  ofstream out("output.txt",ios::app);

  int cnt=0;

  for(int i=0;i<n;i++){

    for(int j=i+1;j<n;j++){

      if(abs(arr[i]-arr[j])==key)

        cnt++;

    }

  }

  out<<cnt<<endl;

}



int main()

{

    int n,T;

    ifstream inp("input.txt");

    

    inp>>T;                   //total number of test cases

    while(T--){

        inp>>n;

        int key,arr[n];

        for(int i=0;i<n;i++){

            inp>>arr[i];

        }

        inp>>key;

        countPair(arr,n,key);

    }

    inp.close();

    return 0;

}

